// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // known parts so far:
    //  Nand, Not, And, Or, Xor, Mux, Dmux,
    //  Not16, And16, Or16, Mux16, Or8Way,
    //  Mux4Way16, Mux8Way16

    // Put your code here:
    DMux(in=in, sel=sel[0], a=dmuxa, b=dmuxb);
    DMux(in=in, sel=sel[0], a=dmuxc, b=dmuxd);

    // mask {a, b} or {c, d}, depending on sel msb
    Not(in=sel[1], out=selab);
    And(a=sel[1], b=sel[1], out=selcd);

    And(a=selab, b=dmuxa, out=a);
    And(a=selab, b=dmuxb, out=b);
    And(a=selcd, b=dmuxc, out=c);
    And(a=selcd, b=dmuxd, out=d);
}